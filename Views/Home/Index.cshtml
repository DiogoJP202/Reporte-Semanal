@model ReportDataViewModel
@{
    ViewData["Title"] = "Gerador de Report";
}

<div class="text-center">
    <h1 class="display-4">Gerador de Report Semanal</h1>
</div>

<form method="post">

    <h4>Informações Gerais</h4>
    <div class="row mb-3">
        <div class="col-md-3"><label class="form-label">Dia Inicial</label><input asp-for="DiaIReport" class="form-control" required /></div>
        <div class="col-md-3"><label class="form-label">Dia Final</label><input asp-for="DiaFReport" class="form-control" required /></div>
        <div class="col-md-3"><label class="form-label">Mês</label><input asp-for="MesReport" class="form-control" required /></div>
        <div class="col-md-3"><label class="form-label">Ano</label><input asp-for="AnoReport" class="form-control" required /></div>
    </div>


    <hr />

    <h4>Notícias</h4>

    <div id="container-noticias">
        @for (int i = 0; i < Model.Noticias.Count; i++)
        {
            <div class="card mb-3 noticia-form">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>Notícia</span>
                    <button type="button" class="btn btn-danger btn-sm remove-noticia-btn">-</button>
                </div>
                <div class="card-body">
                    <div class="mb-2">
                        <label class="form-label">Título Principal</label>
                        <input asp-for="Noticias[i].Titulo" class="form-control" />
                    </div>
                    <div class="mb-2">
                        <label class="form-label">Subtítulo</label>
                        <input asp-for="Noticias[i].Subtitulo" class="form-control" />
                    </div>
                    <div>
                        <label class="form-label">Texto da Notícia</label>
                        <textarea asp-for="Noticias[i].Texto" class="form-control" rows="5"></textarea>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-3">
        <button type="button" id="add-noticia-btn" class="btn btn-success">+</button>
    </div>

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="mt-3 d-grid">
        <button type="submit" class="btn btn-primary btn-lg">Gerar HTML</button>
    </div>
</form>

<template id="noticia-template">
    <div class="card mb-3 noticia-form">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span>Notícia</span>
            <button type="button" class="btn btn-danger btn-sm remove-noticia-btn">-</button>
        </div>
        <div class="card-body">
            <div class="mb-2">
                <label class="form-label">Título Principal</label>
                <input name="Noticias[__INDEX__].Titulo" class="form-control" />
            </div>
            <div class="mb-2">
                <label class="form-label">Subtítulo</label>
                <input name="Noticias[__INDEX__].Subtitulo" class="form-control" />
            </div>
            <div>
                <label class="form-label">Texto da Notícia</label>
                <textarea name="Noticias[__INDEX__].Texto" class="form-control" rows="5"></textarea>
            </div>
        </div>
    </div>
</template>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addBtn = document.getElementById('add-noticia-btn');
            const container = document.getElementById('container-noticias');

            function updateIndices() {
                const noticias = container.querySelectorAll('.noticia-form');
                noticias.forEach((noticia, index) => {
                    // Atualiza o texto do cabeçalho
                    const headerSpan = noticia.querySelector('.card-header span');
                    if (headerSpan) {
                        headerSpan.textContent = `Notícia ${index + 1}`;
                    }

                    noticia.querySelectorAll('input, textarea').forEach(input => {
                        input.name = input.name.replace(/\[\d+\]/, `[${index}]`);
                    });
                });
            }

            // Adicionar uma nova notícia
            addBtn.addEventListener('click', function () {
                const template = document.getElementById('noticia-template');
                const clone = template.content.cloneNode(true);

                // Pega o elemento card que foi clonado
                const newCard = clone.querySelector('.noticia-form');

                // Adiciona a classe de animação ANTES de adicionar ao DOM
                newCard.classList.add('new-item');

                container.appendChild(clone);
                updateIndices();

                // Remove a classe de animação depois que ela termina para não reexecutar
                setTimeout(() => {
                    newCard.classList.remove('new-item');
                }, 500); // 500ms é a duração da animação
            });

            // Remover uma notícia
            container.addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('remove-noticia-btn')) {
                    e.preventDefault();

                    const noticiasAtuais = container.querySelectorAll('.noticia-form');
                    if (noticiasAtuais.length > 1) {
                        const cardToRemove = e.target.closest('.noticia-form');

                        // Adiciona a classe de animação de saída
                        cardToRemove.classList.add('removing-item');

                        // Espera a animação terminar ANTES de remover o elemento
                        cardToRemove.addEventListener('animationend', function() {
                            cardToRemove.remove();
                            updateIndices(); // Atualiza os índices SÓ DEPOIS de remover
                        });

                    } else {
                        alert('É necessário ter pelo menos uma notícia.');
                    }
                }
            });

            updateIndices();
        });
    </script>
}